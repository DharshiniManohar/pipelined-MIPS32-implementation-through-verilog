`timescale 1ns / 1ps

module pipeline_tb;

reg clk1, clk2;
integer i;

pipe_MIPS32 mips(clk1, clk2);

initial begin
    clk1 = 0; clk2 = 0;
    repeat (20)
    begin
        #5 clk1 = 1; #5 clk1 = 0;
        #5 clk2 = 1; #5 clk2 = 0;
    end
end

initial begin
    mips.Mem[0] = 32'b001011_00000_00001_0000000000001010; // ADDI R1,R0,10
    mips.Mem[1] = 32'b001011_00000_00010_0000000000000010; // ADDI R2,R0,2
    mips.Mem[2] = 32'b000000_00001_00010_00011_00000_000000; // ADD R3,R1,R2
    mips.Mem[3] = 32'b000010_00001_00010_00100_00000_000000; // SUB R4,R1,R2
    mips.Mem[4] = 32'b000101_00001_00010_00101_00000_000000; // MUL R5,R1,R2
    mips.Mem[5] = 32'b111111_00000_00000_00000_00000_000000; // HLT

    for (i = 6; i < 1024; i = i + 1)
        mips.Mem[i] = 32'h00000000;
end

initial begin
    $dumpfile("pipeline_tb.vcd");
    $dumpvars(0, pipeline_tb);
    #300
    for (i = 0; i < 6; i = i + 1)
        $display("R%d - %d", i, mips.Reg[i]);
end

endmodule
